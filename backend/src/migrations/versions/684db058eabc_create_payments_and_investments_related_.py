"""create payments and investments related tables

Revision ID: 684db058eabc
Revises: 1cc84e8a7509
Create Date: 2025-05-30 21:07:06.874543

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '684db058eabc'
down_revision: Union[str, None] = '1cc84e8a7509'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('portfolios',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('oid_myfx', sa.Integer(), nullable=False),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('broker', sa.String(), nullable=False),
    sa.Column('currency', sa.CHAR(length=3), nullable=False),
    sa.Column('risk', sa.Enum('CONSERVATIVE', 'MOD_CONSERVATIVE', 'MOD_AGGRESSIVE', 'AGGRESSIVE', 'VERY_AGGRESSIVE', name='riskscale'), nullable=True),
    sa.Column('units_total', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('nav_price', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=24, scale=2), nullable=False),
    sa.Column('equity', sa.DECIMAL(precision=24, scale=2), nullable=False),
    sa.Column('drawdown', sa.DECIMAL(precision=6, scale=3), nullable=False),
    sa.Column('gain_percent', sa.DECIMAL(precision=9, scale=3), nullable=False),
    sa.Column('net_profit', sa.DECIMAL(precision=18, scale=2), nullable=False),
    sa.Column('first_trade_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_sync', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_portfolios_oid_myfx'), 'portfolios', ['oid_myfx'], unique=False)
    op.create_table('holdings',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('units', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('total_deposit', sa.DECIMAL(precision=18, scale=8), nullable=False),
    sa.Column('total_withdraw', sa.DECIMAL(precision=18, scale=8), nullable=False),
    sa.Column('current_value', sa.DECIMAL(precision=18, scale=8), nullable=False),
    sa.Column('pnl', sa.DECIMAL(precision=18, scale=8), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('portfolio_id', 'user_id', name='pk_portfolio_user')
    )
    op.create_table('payment_intents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider_payment_id', sa.String(), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('currency', sa.CHAR(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SUCCEEDED', 'FAILED', name='paymentstatus'), nullable=False),
    sa.Column('provider', sa.Enum('YOOKASSA', 'STRIPE', 'CRYPTO', 'YANDEX', 'TINKOFF', 'ROBOKASSA', 'PAYANYWAY', name='paymentprovider'), nullable=False),
    sa.Column('_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider', 'provider_payment_id', name='uq_payment_provider_id')
    )
    op.create_index(op.f('ix_payment_intents_status'), 'payment_intents', ['status'], unique=False)
    op.create_table('portfolio_snapshots',
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('snapshot_date', sa.Date(), nullable=False),
    sa.Column('nav_price', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('equity', sa.DECIMAL(precision=24, scale=2), nullable=False),
    sa.Column('drawdown', sa.DECIMAL(precision=6, scale=3), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('portfolio_id', 'snapshot_date', name='pk_portfolio_snapshot')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('intent_id', sa.UUID(), nullable=True),
    sa.Column('portfolio_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('DEPOSIT', 'WITHDRAW_PENDING', 'WITHDRAW', 'INVEST', 'INVEST_PENDING', 'PAYBACK', 'FEE', 'PNL', name='transactiontype'), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['intent_id'], ['payment_intents.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_type'), 'transactions', ['type'], unique=False)
    op.create_table('unit_issue',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('units', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('price_at_issue', sa.DECIMAL(precision=24, scale=8), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unit_issue')
    op.drop_index(op.f('ix_transactions_type'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('portfolio_snapshots')
    op.drop_index(op.f('ix_payment_intents_status'), table_name='payment_intents')
    op.drop_table('payment_intents')
    op.drop_table('holdings')
    op.drop_index(op.f('ix_portfolios_oid_myfx'), table_name='portfolios')
    op.drop_table('portfolios')
    # ### end Alembic commands ###
