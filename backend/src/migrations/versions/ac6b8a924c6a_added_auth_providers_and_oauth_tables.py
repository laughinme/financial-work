"""Added auth_providers and oauth tables

Revision ID: ac6b8a924c6a
Revises: e48bceb50212
Create Date: 2025-05-24 18:30:49.478649

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ac6b8a924c6a'
down_revision: Union[str, None] = 'e48bceb50212'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_providers',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('provider', sa.Enum('CREDENTIALS', 'TELEGRAM', 'GOOGLE', name='provider'), nullable=False),
    sa.Column('provider_user_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider', 'provider_user_id', name='uq_provider_user')
    )
    op.create_table('credentials_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_email', sa.Boolean(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['auth_providers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('telegram_providers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['auth_providers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_phone_number_key'), 'users', type_='unique')
    op.drop_column('users', 'secret')
    op.drop_column('users', 'password')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'email')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('secret', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.create_unique_constraint(op.f('users_phone_number_key'), 'users', ['phone_number'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.drop_table('telegram_providers')
    op.drop_table('credentials_providers')
    op.drop_table('auth_providers')
    # ### end Alembic commands ###
