"""Rework auth tables

Revision ID: ef8b2f956fae
Revises: fbb5307d28a7
Create Date: 2025-06-15 00:22:45.072866

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ef8b2f956fae'
down_revision: Union[str, None] = 'fbb5307d28a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('identities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.Enum('PASSWORD', 'TELEGRAM', 'GOOGLE', 'APPLE', name='provider'), nullable=False),
    sa.Column('external_id', sa.String(), nullable=False),
    sa.Column('secret_hash', sa.String(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('provider', 'external_id', name='uq_provider_external')
    )
    op.drop_table('telegram_providers')
    op.drop_table('credentials_providers')
    op.drop_table('auth_providers')
    op.add_column('users', sa.Column('allow_password_login', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('banned', sa.Boolean(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'banned')
    op.drop_column('users', 'allow_password_login')
    op.create_table('auth_providers',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('auth_providers_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('provider', postgresql.ENUM('CREDENTIALS', 'TELEGRAM', 'GOOGLE', name='provider'), autoincrement=False, nullable=False),
    sa.Column('provider_user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='auth_providers_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='auth_providers_pkey'),
    sa.UniqueConstraint('provider', 'provider_user_id', name='uq_provider_user', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('credentials_providers',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_email', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['auth_providers.id'], name=op.f('credentials_providers_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('credentials_providers_pkey'))
    )
    op.create_table('telegram_providers',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('photo_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['auth_providers.id'], name=op.f('telegram_providers_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('telegram_providers_pkey'))
    )
    op.drop_table('identities')
    # ### end Alembic commands ###
